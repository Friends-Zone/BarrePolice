--[[
    Copyright 2017 Matthew Hesketh <wrxck0@gmail.com>
    This code is licensed under the MIT. See LICENSE for details.
]]

local pole = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')

function pole:init()
    pole.commands = mattata.commands(self.info.username):command('pole'):command('polestats'):command('gpole'):command('gpolestats').table
    pole.help = '/pole - Get the stats for the pole.'
end

function pole:on_message(message, configuration, language)
    if message.text:match('^[/!#]pole') or message.text:match('^[/!#]polestats') then
        local poles = redis:keys("pole:*:"..message.chat.id)
        local subpoles = redis:keys("subpole:*:"..message.chat.id)
        local fails = redis:keys("fail:*:"..message.chat.id)
        local output = ""

        if #poles > 0 then
            local user = mattata.get_user(redis:hget(poles[#poles], 'user'))
            user = user.result
            output = output.. "<b>Latest Pole done by</b> "
            if user.username then
                output = output .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> <b>at</b> <i>' .. mattata.split(poles[#poles], ':')[2] .. " " .. redis:hget(poles[#poles], 'time') .. "</i>\n"
            else
                output = output .. user.first_name .. ' <b>at</b> <i>' .. mattata.split(poles[#poles], ':')[2] .. " " .. redis:hget(poles[#poles], 'time') .. "</i>\n"
            end
        end
        if #subpoles > 0 then
            local user = mattata.get_user(redis:hget(subpoles[#subpoles], 'user'))
            user = user.result
            output = output.. "<b>Latest Subole done by</b> "
            if user.username then
                output = output .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> <b>at</b> <i>' .. mattata.split(subpoles[#subpoles], ':')[2] .. " " .. redis:hget(subpoles[#subpoles], 'time') .. "</i>\n"
            else
                output = output .. user.first_name .. ' <b>at</b> <i>' .. mattata.split(subpoles[#subpoles], ':')[2] .. " " .. redis:hget(subpoles[#subpoles], 'time') .. "</i>\n"
            end
        end
        if #fails > 0 then
            local user = mattata.get_user(redis:hget(fails[#fails], 'user'))
            user = user.result
            output = output.. "<b>Latest Fail done by</b> "
            if user.username then
                output = output .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> <b>at</b> <i>' .. mattata.split(fails[#fails], ':')[2] .. " " .. redis:hget(fails[#fails], 'time') .. "</i>\n"
            else
                output = output .. user.first_name .. ' <b>at</b> <i>' .. mattata.split(fails[#fails], ':')[2] .. " " .. redis:hget(fails[#fails], 'time') .. "</i>\n"
            end
        end

        local emojis = {"1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟"}

        if #poles > 0 then
            output = output.."\n<b>POLE RANK</b>\n"
            local poles = {}
            for user, value in pairs(redis:hgetall('pole_stats:' .. message.chat.id)) do
                poles[user] = value
            end
            table.sort(poles)
            local counter = 0
            for k, v in pairs(poles) do
                user = mattata.get_user(k)
                user = user.result
                if user.username then
                    print(emojis[counter])
                    print(v)
                    output = output.. emojis[counter] .. " " .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> => <i>' .. v .. '</i>\n'
                else
                    output = output.. emojis[counter] .. " " .. user.first_name .. ' => <i>' .. v .. '</i>\n'
                end
                counter = counter+1
            end
        end
        if #subpoles > 0 then
            output = output.."\n<b>SUBPOLE RANK</b>\n"
            local subpoles = {}
            for user, value in pairs(redis:hgetall('subpole_stats:' .. message.chat.id)) do
                subpoles[user] = value
            end
            table.sort(subpoles)
            local counter = 0
            for k, v in pairs(subpoles) do
                user = mattata.get_user(k)
                user = user.result
                if user.username then
                    output = output.. emojis[counter] .. " " .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> => <i>' .. v .. '</i>\n'
                else
                    output = output.. emojis[counter] .. " " .. user.first_name .. ' => <i>' .. v .. '</i>\n'
                end
                counter = counter+1
            end
        end
        if #fails > 0 then
            output = output.."\n<b>FAILS RANK</b>\n"
            local fails = {}
            for user, value in pairs(redis:hgetall('fail_stats:' .. message.chat.id)) do
                fails[user] = value
            end
            table.sort(fails)
            local counter = 0
            for k, v in pairs(fails) do
                user = mattata.get_user(k)
                user = user.result
                if user.username then
                    output = output.. emojis[counter] .. " " .. '<a href="https://t.me/' .. user.username .. '">' .. user.first_name .. '</a> => <i>' .. v .. '</i>\n'
                else
                    output = output.. emojis[counter] .. " " .. user.first_name .. ' => <i>' .. v .. '</i>\n'
                end
                counter = counter+1
            end
        end

        if output == "" then
            output = "I couldn't retreive pole information for this group"
        end
        return mattata.send_reply(message, output, 'html')
    end
end

return pole
