--[[
    Copyright 2017 Matthew Hesketh <wrxck0@gmail.com>
    This code is licensed under the MIT. See LICENSE for details.
]]

local import = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')

function import:init()
    import.commands = mattata.commands(self.info.username):command('import').table
    import.help = '/import - Import administrative settings & toggled plugins from another mattata-administrated group.'
end

function import.debug(t, s)
    for k, v in pairs(t) do
        local kfmt = '["' .. tostring(k) ..'"]'
        if type(k) ~= 'string' then
            kfmt = '[' .. k .. ']'
        end
        local vfmt = '"'.. tostring(v) ..'"'
        if type(v) == 'table' then
            tprint(v, (s or '')..kfmt)
        else
            if type(v) ~= 'string' then
                vfmt = tostring(v)
            end
            print(type(t)..(s or '')..kfmt..' = '..vfmt)
        end
    end
end

function import:on_message(message, configuration, language)
    if message.chat.type ~= 'supergroup'
    then
        return mattata.send_reply(
            message,
            language['errors']['supergroup']
        )
    elseif not mattata.is_group_admin(
        message.chat.id,
        message.from.id
    )
    then
        return mattata.send_reply(
            message,
            language['errors']['admin']
        )
    end
    local input = mattata.input(message.text)
    if not input
    then
        return mattata.send_reply(
            message,
            import.help
        )
    end
    input = mattata.get_chat(input)
    if not input
    then
        return mattata.send_reply(
            message,
            language['import']['1']
        )
    elseif input.result.type ~= 'supergroup'
    then
        return mattata.send_reply(
            message,
            language['import']['2']
        )
    end
    local settings = redis:hgetall('chat:' .. input.result.id .. ':settings')
    or {}
    local current = redis:hgetall('chat:' .. message.chat.id .. ':settings')
    for k, v in pairs(current)
    do
        if k ~= 'use administration'
        then
            redis:hdel(
                'chat:' .. message.chat.id .. ':settings',
                k
            )
        end
    end
    for k, v in pairs(settings)
    do
        redis:hset(
            'chat:' .. message.chat.id .. ':settings',
            k,
            v
        )
    end
    local plugins = redis:hgetall('chat:' .. input.result.id .. ':disabled_plugins')
    or {}
    for k, v in pairs(plugins)
    do
        redis:hset(
            'chat:' .. message.chat.id .. ':disabled_plugins',
            k,
            v
        )
    end
    local antispam = redis:hget('chat:' .. input.result.id .. ':settings', 'antispam') or false
    if antispam then
        values = redis:hgetall('chat:' .. input.result.id .. ':values') or {}
        import.debug(antispam)
    else
        redis:hdel('chat:' .. chat_id .. ':settings', 'antispam')
    end
    return mattata.send_message(
        message.chat.id,
        string.format(
            language['import']['3'],
            input.result.title,
            message.chat.title
        )
    )
end

return import
