--[[
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local clashroyale = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')
local requests = require('requests')
local json = require('dkjson')

function clashroyale:init(configuration)
    assert(
        configuration.keys.clashroyale,
        'clashroyale.lua requires an API key, and you haven\'t got one configured!'
    )
    clashroyale.commands = mattata.commands(self.info.username):command('clashroyale'):command('cr').table
    clashroyale.help = '/clashroyale player <#ID> - Send information about that user.\n\nAlis: /cr'
end

function clashroyale.request(key, input, content)
    if input == "player" then
        headers = {auth = key}
        response = requests.get{url = 'https://api.cr-api.com/player/'..content, headers = headers}
        return response.json()
    end
end

function clashroyale.parse_player(message, data)
    local output = ""
    output = data.name .. " [#" .. data.tag .. "]\n"
    if rank then
        output = output .. data.trophies .. "üèÜ - Top " .. data.rank
    else
        output = output .. data.trophies .. "üèÜ"
    end

    local keyboard = mattata.inline_keyboard()
    :row(mattata.row():callback_data_button('View Clan', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':' .. 'clan'))
    :row(
        mattata.row()
        :callback_data_button('Sth', '')
        :callback_data_button('Sth 2', '')
    )

    return output, keyboard
end

function clashroyale:on_message(message, configuration, language)
    local input = mattata.input(message.text)
    if not input then
        return mattata.send_reply(message, clashroyale.help)
    end

    if input:match('^player') then
        local json_data = clashroyale.request(configuration.keys.clashroyale, "player", input:gsub("%s+", ""):gsub("player", ""):gsub("#", ""))
        local text, keyboard = clashroyale.parse_player(message, json_data)
        return message.send_message(message, text, true, false, false, message.message_id, keyboard)
    else
        return mattata.send_reply(message, clashroyale.help)
    end
end

return clashroyale
