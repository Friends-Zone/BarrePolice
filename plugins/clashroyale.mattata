--[[
    Copyright 2017 Diego Barreiro <diego@makeroid.io>
    This code is licensed under the MIT. See LICENSE for details.
]]

local clashroyale = {}
local mattata = require('mattata')
local redis = dofile('libs/redis.lua')
local requests = require('requests')
local json = require('dkjson')

function clashroyale:init(configuration)
    assert(
        configuration.keys.clashroyale,
        'clashroyale.lua requires an API key, and you haven\'t got one configured!'
    )
    clashroyale.commands = mattata.commands(self.info.username):command('clashroyale'):command('cr').table
    clashroyale.help = '/clashroyale player <#ID> - Send information about that user.\n\nAlis: /cr'
end

function clashroyale.request(key, input, content)
    if input == "player" then
        headers = {auth = key}
        response = requests.get{url = 'https://api.cr-api.com/player/'..content, headers = headers}
        return response.json()
    end
end

function clashroyale.parse_player(message, data)
    local output = ""
    output = "<b>Player</b>\n"
    output = output.. mattata.escape_html(data.name) .. " [#" .. data.tag .. "]\n"
    if rank then
        output = output.. math.floor(tonumber(data.trophies)) .. "üèÜ - Top " .. data.rank .. "\n"
    else
        output = output.. math.floor(tonumber(data.trophies)) .. "üèÜ" .. "\n"
    end
    output = output.. "Arena <i>" .. data.arena.name .. "</i> <code>" .. data.arena.arena .. "</code>\n\n"
    output = output.. "<b>Clan</b>\n"
    output = output.. mattata.escape_html(data.clan.name) .. " [#" .. data.clan.tag .. "]\n"
    output = output.. "Role: <i>" .. data.clan.role .. "</i>\n"
    output = output.. "Donations: <code>" .. data.clan.donations .. "</code>\n"
    output = output.. "Donations Received: <code>" .. data.clan.donationsReceived .. "</code>\n\n"
    output = output.. "<b>Games</b>\n"
    output = output.. "Total Games Played: <code>" .. data.games.total .. "</code>\n"
    output = output.. "Tournament Games Played: <code>" .. data.games.tournamentGames .. "</code>\n"
    output = output.. "Wins: <code>" .. math.floor(tonumber(data.games.wins)) .. "</code> (<i>" .. math.floor(tonumber(data.games.winsPercent)*100) .. "%</i>) | Draws: <code>" .. math.floor(tonumber(data.games.draws)) .. "</code> (<i>" .. math.floor(tonumber(data.games.drawsPercent)*100) .. "%</i>) | Losses: <code>" .. math.floor(tonumber(data.games.losses)) .. "</code> (<i>" .. math.floor(tonumber(data.games.lossesPercent)*100) .. "%</i>)\n"

    local keyboard = mattata.inline_keyboard()
    :row(mattata.row():callback_data_button('View Clan Information', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':clan'))
    :row(mattata.row():callback_data_button('View User Statistics', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':stats'))
    :row(mattata.row():callback_data_button('View Chest Cycle', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':chests'))
    :row(mattata.row():callback_data_button('View League Stats', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':league'))
    :row(mattata.row():callback_data_button('View Current Deck', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':deck'):url_button('Open in CR', data.deckLink)
    :row(mattata.row():callback_data_button('View Cards Level', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':cards'))
    :row(mattata.row():callback_data_button('View Battle History', 'clashroyale:' .. message.chat.id .. ':' .. message.message_id .. ':player:' .. data.tag .. ':battles'))

    return output, keyboard
end

function clashroyale:on_message(message, configuration, language)
    local input = mattata.input(message.text)
    if not input then
        return mattata.send_reply(message, clashroyale.help)
    end

    if input:match('^player') then
        local json_data = clashroyale.request(configuration.keys.clashroyale, "player", input:gsub("%s+", ""):gsub("player", ""):gsub("#", ""))
        if json_data.tag then
            local text, keyboard = clashroyale.parse_player(message, json_data)
            return mattata.send_message(message, text, 'html', false, false, message.message_id, keyboard)
        else
            return mattata.send_reply(message, language['errors']['results'])
    else
        return mattata.send_reply(message, clashroyale.help)
    end
end

return clashroyale
